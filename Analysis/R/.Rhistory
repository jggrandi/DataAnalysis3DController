plot(p2)
plot(p22)
plot(p22,pch=1)
plot(p1,pch=2)
install.packages("cowplot")
library(cowplot)
plot_grid(p1,p22)
plot_grid(p1,p22,labels=c("User1","User2"),ncol=1,nrow=2)
library(gridextra)
library(gridExtra)
install.packages("gridExtra")
library(gridExtra)
legend <- get_legend(p1)
p22 <- p2 + geom_rect(aes(xmin = Start, xmax = Finish, ymax = 1, fill = Action)) + theme(legend.position="none")
p22
get_legend<-function(myggplot){
tmp <- ggplot_gtable(ggplot_build(myggplot))
leg <- which(sapply(tmp$grobs, function(x) x$name) == "guide-box")
legend <- tmp$grobs[[leg]]
return(legend)
}
legend <- get_legend(p1)
p1 <- p1 + theme(legend.position="none")
grid.arrange(p1,p22,legend,ncol=1,nrow=2)
grid.arrange(p1,p22,legend,ncol=2,nrow=2)
grid.arrange(p1,p22,legend,ncol=1,nrow=3)
grid.arrange(legend,p1,p22,ncol=2,nrow=3)
grid.arrange(legend,p1,p22,ncol=2,nrow=2)
blankPlot <- ggplot()+geom_blank(aes(1,1)) +
cowplot::theme_nothing()
grid.arrange(legend,blankPlot,p1,p22,ncol=2,nrow=2)
grid.arrange(legend,blankPlot,p1,p22,ncol=2,nrow=2,height = c(0.2,2.5))
grid.arrange(legend,blankPlot,p1,p22,ncol=2,nrow=2,heights = c(0.2,2.5))
grid.arrange(blankPlot,p1,legend,p22,ncol=2,nrow=2,widths = c(0.2,2.5))
grid.arrange(p1,p22,legend,ncol=2,nrow=2,layout_matrix = rbind(c(1,1),c(2,3)),widths = c(2.5,2.5),heights=c(0.2,2.5))
grid.arrange(legend,p1,p22,ncol=2,nrow=2,layout_matrix = rbind(c(1,1),c(2,3)),widths = c(2.5,2.5),heights=c(0.2,2.5))
grid.arrange(legend,p1,p22,ncol=2,nrow=2,layout_matrix = rbind(c(2,3),c(1,1)),widths = c(0.2,2.5),heights=c(2.5,2.5))
grid.arrange(p1,p22,legend,ncol=2,nrow=2,layout_matrix = rbind(c(2,3),c(1,1)),widths = c(0.2,2.5),heights=c(2.5,2.5))
grid.arrange(p1,legend,p22,ncol=2,nrow=2,layout_matrix = rbind(c(2,3),c(1,1)),widths = c(0.2,2.5),heights=c(2.5,2.5))
grid.arrange(p1,legend,p22,ncol=2,nrow=2,layout_matrix = rbind(c(2,3),c(1,1)),widths = c(2.2,2.5),heights=c(2.5,2.5))
grid.arrange(p1,legend,p22,ncol=2,nrow=2,layout_matrix = rbind(c(3,2),c(1,1)),widths = c(0.2,2.5),heights=c(2.5,2.5))
grid.arrange(p1,legend,p22,ncol=2,nrow=2,layout_matrix = rbind(c(1,1),c(2,3)),widths = c(0.2,2.5),heights=c(2.5,2.5))
grid.arrange(p1,legend,p22,ncol=2,nrow=2,layout_matrix = rbind(c(1,1),c(2,2)),widths = c(0.2,2.5),heights=c(2.5,2.5))
grid.arrange(p1,legend,p22,ncol=2,nrow=2,layout_matrix = rbind(c(1,1),c(3,2)),widths = c(0.2,2.5),heights=c(2.5,2.5))
grid.arrange(p1,legend,p22,ncol=2,nrow=2,layout_matrix = rbind(c(1,1),c(3,2)),widths = c(2.5,0.2),heights=c(2.5,2.5))
grid.arrange(p1,legend,p22,ncol=2,nrow=2,layout_matrix = rbind(c(1,1),c(3,2)),widths = c(2.5,0.5),heights=c(2.5,2.5))
grid.arrange(p1,legend,p22,ncol=2,nrow=2,layout_matrix = rbind(c(1,1),c(3,2)),widths = c(2.5,0.2),heights=c(2.7,2.7))
grid.arrange(p1,legend,p22,ncol=2,nrow=2,layout_matrix = rbind(c(1,1),c(3,2)),widths = c(2.5,0.2),heights=c(3,3))
grid.arrange(p1,legend,p22,ncol=2,nrow=2,layout_matrix = rbind(c(1,1),c(2,3)),widths = c(2.5,0.2),heights=c(2.7,2.7))
grid.arrange(p1,legend,p22,ncol=2,nrow=2,layout_matrix = rbind(c(1,2),c(2,3)),widths = c(2.5,0.2),heights=c(2.7,2.7))
grid.arrange(p1,legend,p22,ncol=2,nrow=2,layout_matrix = rbind(c(1,2),c(3,2)),widths = c(2.5,0.2),heights=c(2.7,2.7))
p22 <- p2 + geom_rect(aes(xmin = Start, xmax = Finish, ymax = 1, fill = Action,colour = factor(Action))) + theme(legend.position="none")
p1 <- p + geom_rect(aes(xmin = Start, xmax = Finish, ymax = 1, fill = Action,colour = factor(Action)))
grid.arrange(p1,legend,p22,ncol=2,nrow=2,layout_matrix = rbind(c(1,2),c(3,2)),widths = c(2.5,0.2),heights=c(2.7,2.7))
p22 <- p2 + geom_rect(aes(xmin = Start, xmax = Finish, ymax = 1, fill = Action,colour = factor(Action))) + theme(legend.position="none")
p1 <- p + geom_rect(aes(xmin = Start, xmax = Finish, ymax = 1, fill = Action,colour = factor(Action)))
legend <- get_legend(p1)
p1 <- p1 + theme(legend.position="none")
grid.arrange(p1,legend,p22,ncol=2,nrow=2,layout_matrix = rbind(c(1,2),c(3,2)),widths = c(2.5,0.2),heights=c(2.7,2.7))
p1 <- p + geom_rect(aes(xmin = Start, xmax = Finish, ymax = 1, fill = Action, colour = Action))
p22 <- p2 + geom_rect(aes(xmin = Start, xmax = Finish, ymax = 1, fill = Action, colour = Action)) + theme(legend.position="none")
p1 <- p1 + theme(legend.position="none")
p1 <- p + geom_rect(aes(xmin = Start, xmax = Finish, ymax = 1, fill = Action, colour = Action))
legend <- get_legend(p1)
p1 <- p1 + theme(legend.position="none")
grid.arrange(p1,legend,p22,ncol=2,nrow=2,layout_matrix = rbind(c(1,2),c(3,2)),widths = c(2.5,0.2),heights=c(2.7,2.7))
p22 <- p2 + geom_rect(aes(xmin = Start, xmax = Finish, ymax = 1, colour = Action)) + theme(legend.position="none")
p1 <- p + geom_rect(aes(xmin = Start, xmax = Finish, ymax = 1, colour = Action))
legend <- get_legend(p1)
p1 <- p1 + theme(legend.position="none")
grid.arrange(p1,legend,p22,ncol=2,nrow=2,layout_matrix = rbind(c(1,2),c(3,2)),widths = c(2.5,0.2),heights=c(2.7,2.7))
p22 <- p2 + geom_rect(aes(xmin = Start, xmax = Finish, ymax = 1, colours(red,green,blue))) + theme(legend.position="none")
grid.arrange(p1,legend,p22,ncol=2,nrow=2,layout_matrix = rbind(c(1,2),c(3,2)),widths = c(2.5,0.2),heights=c(2.7,2.7))
p1 <- p + geom_rect(aes(xmin = Start, xmax = Finish, ymax = 1, colour = factor(Action)))
p1 <- p + geom_rect(aes(xmin = Start, xmax = Finish, ymax = 1, fill = factor(Action)))
p22 <- p2 + geom_rect(aes(xmin = Start, xmax = Finish, ymax = 1, fill = factor(Action))) + theme(legend.position="none")
p22
legend <- get_legend(p1)
p1 <- p1 + theme(legend.position="none")
grid.arrange(p1,legend,p22,ncol=2,nrow=2,layout_matrix = rbind(c(1,2),c(3,2)),widths = c(2.5,0.2),heights=c(2.7,2.7))
ggplot(p1,p22)
library(RColorBrewer)
myColors <- brewer.pal(5,"Set1")
names(myColors) <- levels(dat$grp)
names(myColors) <- levels(`1.playerLog1_test`$Action)
colScale <- scale_colour_manual(name = "grp",values = myColors)
p <- ggplot(`1.playerLog1_test`,aes(ymin=0,xmax=164,colours = grp))
p1 <- p + geom_rect(aes(xmin = Start, xmax = Finish, ymax = 1))+colScale
p1
p <- ggplot(`1.playerLog1_test`,aes(ymin=0,xmax=164,colour = grp))
p1 <- p + geom_rect(aes(xmin = Start, xmax = Finish, ymax = 1))+colScale
p1
p <- ggplot(`1.playerLog1_test`,aes(ymin=0,xmax=164))
p1 <- p + geom_rect(aes(xmin = Start, xmax = Finish, ymax = 1, fill = Task))
p22 <- p2 + geom_rect(aes(xmin = Start, xmax = Finish, ymax = 1, fill = Task) + theme(legend.position="none")
e
p22 <- p2 + geom_rect(aes(xmin = Start, xmax = Finish, ymax = 1, fill = Task)) + theme(legend.position="none")
p1 <- p1 + theme(legend.position="none")
grid.arrange(p1,legend,p22,ncol=2,nrow=2,layout_matrix = rbind(c(1,2),c(3,2)),widths = c(2.5,0.2),heights=c(2.7,2.7))
Team1 <- read.csv("~/Dropbox/bkp_logs/formated/1-playerLog1_test2.csv")
View(Team1)
View(Team1)
View(Team1)
5.004395
1.808228
1.897827
4.464478
5.495468
6.200714
2.071304
4.244583
1.67749
1.668503
2.63269
1.064636
1.387421
2.83844
0.8165894
2.183136
1.561035
4.607483
3.834137
1.236786
2.176819
0.977356
0.921814
3.4487
2.551941
1.675201
0.9214172
1.095642
4.600098
0.710144
1.22171
5.234985
1.13266
2.976868
0.9860535
3.024414
3.232239
3.137634
0.2100677
0.2946472
0.1516113
0.1687012
2.905716
1.728912
0.1365967
0.7964478
0.6889343
1.614166
1.91333
0.9974365
1.177856
0.9795227
0.6153564
1.137177
1.731384
0.8577271
0.4042053
1.379333
0.7641602
1.706177
0.9874268
0.8066406
0.1166687
2.75824
2.633972
0.6799622
1.824951
1.43222
0.6447449
0.4978027
0.2876892
2.784576
0.4638062
1.526917
0.03363037
3.574585
2.534424
5.004395
1.808228
1.897827
4.464478
5.495468
6.200714
2.071304
4.244583
1.67749
1.668503
2.63269
1.064636
1.387421
2.83844
0.8165894
2.183136
1.561035
4.607483
3.834137
1.236786
2.176819
0.977356
0.921814
3.4487
2.551941
1.675201
0.9214172
1.095642
4.600098
0.710144
1.22171
5.234985
1.13266
2.976868
0.9860535
3.024414
3.232239
3.137634
0.2100677
0.2946472
0.1516113
0.1687012
2.905716
1.728912
0.1365967
0.7964478
0.6889343
1.614166
1.91333
0.9974365
1.177856
0.9795227
0.6153564
1.137177
1.731384
0.8577271
0.4042053
1.379333
0.7641602
1.706177
0.9874268
0.8066406
0.1166687
2.75824
2.633972
0.6799622
1.824951
1.43222
0.6447449
0.4978027
0.2876892
2.784576
0.4638062
1.526917
0.03363037
3.574585
2.534424
newdata <- subset(Team1, Task = 0 , select=c(User, Action,Start,Finish))
View(newdata)
Team1Task0 < newdata
Team1Task0 <- newdata
rm newdata
delete newdata
remove(newdata)
View(Team1)
remove(Team1)
remove(Team1Task0)
`1.playerLog1_test2` <- read.csv("~/Dropbox/bkp_logs/formated/1-playerLog1_test2.csv")
View(`1.playerLog1_test2`)
Team1 <- read.csv("~/Dropbox/bkp_logs/formated/1-playerLog1_test2.csv")
View(Team1)
t1graph <- ggplot(Team1,aes(ymin=0,xmax=164)
w
t1graph <- ggplot(Team1,aes(ymin=0,xmax=164))
t1plot <- t1graph + geom_rect(aes(xmin = Start, xmax = Finish, ymax = User, fill = Action))
t1plot
t1plot <- t1graph + geom_rect(aes(xmin = Start, xmax = Finish, ymax = User+1, fill = Action))
t1plot
t1plot <- t1graph + geom_rect(aes(xmin = Start, xmax = Finish, ymax = User*0.1+0.1, fill = Action))
t1plot
t1plot <- t1graph + geom_rect(aes(xmin = Start, xmax = Finish, ymax = User+1, fill = Action))
View(`1.playerLog1_test`)
`1.Task0.2016.06.03.15.12.39` <- read.csv("~/Documents/DataAnalysis3DController/Raw/1-Task0-2016-06-03-15-12-39.csv", header=FALSE)
View(`1.Task0.2016.06.03.15.12.39`)
View(`1.Task0.2016.06.03.15.12.39`)
View(`1.Task0.2016.06.03.15.12.39`)
View(`1.Task0.2016.06.03.15.12.39`)
View(`1.Task0.2016.06.03.15.12.39`)
load("~/Documents/DataAnalysis3DController/Formated/SummaryToR.csv")
SummaryToR <- read.csv("~/Documents/DataAnalysis3DController/Formated/SummaryToR.csv", header=FALSE, row.names=1)
View(SummaryToR)
SummaryToR <- read.csv("~/Documents/DataAnalysis3DController/Formated/SummaryToR.csv", header=FALSE)
View(SummaryToR)
summary(SummaryToR)
aov(Members ~ t1 t2 t3 t4, data=SummaryToR)
aov(Members ~ t1, data=SummaryToR)
aov(SummmaryToR$Members ~ SummmaryToR$t1, data=SummaryToR)
a = aov(SummmaryToR$Members ~ SummmaryToR$t1, data=SummaryToR)
data1 <- read.csv("~/Documents/DataAnalysis3DController/Formated/SummaryToR.csv")
View(data1)
summary(data1)
data1.aov <- aov(data1$Members ~ data1$t1)
summary(data1.aov)
summary.aov(data1.aov)
data1.aov <- aov(data1$Members ~ data1$t1,data1$t2)
data1.aov <- aov(data1$Members ~ data1$t1 data1$t2)
data1.aov <- aov(data1$Members ~ data1$t1+data1$t2)
summary.aov(data1.aov)
data1.aov <- aov(data1$Members ~ data1$t1+data1$t2+data1$t3+data1$t4)
summary.aov(data1.aov)
data1.aov <- aov(data1$Members ~ data1$e1+data1$e2+data1$e3+data1$e4)
summary.aov(data1.aov)
cor(mtcars, use="complete.obs", method="kendall")
cor(mtcars, method="kendall")
cor(data1, method="kendall")
cor(data1, method="pearson")
View(data1)
setwd("~/Documents/DataAnalysis3DController/Analysis/R")
task <- read.csv("~/Documents/DataAnalysis3DController/temp/3-Task3-2016-06-06-09-27-43.csv")
View(task)
library(dplyr)
library(dplyr)
library(tidyr)
install.packages("tidyr")
select(task, ends_with("1"))
a <- select(task, ends_with("1"))
View(a)
a <- select(task, ends_with(".1"))
View(task)
user1 <- select(task, ends_with(".1"))
user2 <- select(task, ends_with(".2"))
user3 <- select(task, ends_with(".4"))
user3 <- select(task, ends_with(".3"))
user3 <- select(task, ends_with(".4"))
user4 <- select(task, ends_with(".4"))
View(user1)
View(user2)
View(user3)
View(user4)
View(user3)
user3 <- select(task, ends_with(".3"))
View(user3)
user4 <- select(task, ends_with(".4"))
View(user4)
View(data1)
View(task)
users <- select(task, ends_with(".4",".3"))
users <- select(task, ends_with(".4"),ends_with(".3"))
View(users)
users <- select(task,ends_with(".1"),ends_with(".2") ends_with(".3"),ends_with(".4"))
users <- select(task,ends_with(".1"),ends_with(".2"), ends_with(".3"),ends_with(".4"))
rm(user1,user2,user3,user4)
users <- select(task,ends_with(".1"),ends_with(".2"), ends_with(".3"),ends_with(".4"), -starts_with("User"),-starts_with("Con"))
transmute(users, U1Trans = sqrt(Translation.X.1 + Translation.Y.1 + Tranlation.Z.1))
transmute(users, U1Trans = sqrt(Translation.X.1 + Translation.Y.1 + Translation.Z.1))
View(a)
a <- transmute(users, U1Trans = sqrt(Translation.X.1 + Translation.Y.1 + Translation.Z.1))
View(a)
a <- transmute(users, U1Trans = sqrt((Translation.X.1*Translation.X.1) + (Translation.Y.1*Translation.Y.1) + (Translation.Z.1*Translation.Z.1))
a <- transmute(users, U1Trans = sqrt((Translation.X.1*Translation.X.1) + (Translation.Y.1*Translation.Y.1) + (Translation.Z.1*Translation.Z.1))a
a <- transmute(users, U1Trans = sqrt((Translation.X.1 * Translation.X.1) + (Translation.Y.1 * Translation.Y.1) + (Translation.Z.1 * Translation.Z.1)))
View(a)
View(users)
transmute(users, U1Trans = sqrt((Translation.X.1 * Translation.X.1) + (Translation.Y.1 * Translation.Y.1) + (Translation.Z.1 * Translation.Z.1)))
View(users)
dplyr::transmute(users, U1Trans = sqrt((Translation.X.1 * Translation.X.1) + (Translation.Y.1 * Translation.Y.1) + (Translation.Z.1 * Translation.Z.1)))
tbl_df(users)
transmute(users, U1Trans = sqrt((Translation.X.1 * Translation.X.1) + (Translation.Y.1 * Translation.Y.1) + (Translation.Z.1 * Translation.Z.1)))
View(users)
transmute(users, Translation.X.1 = sqrt((Translation.X.1 * Translation.X.1) + (Translation.Y.1 * Translation.Y.1) + (Translation.Z.1 * Translation.Z.1)))
View(users)
mutate(users, Translation.X.1 = sqrt((Translation.X.1 * Translation.X.1) + (Translation.Y.1 * Translation.Y.1) + (Translation.Z.1 * Translation.Z.1)))
View(users)
mutate(users, AAA = sqrt((Translation.X.1 * Translation.X.1) + (Translation.Y.1 * Translation.Y.1) + (Translation.Z.1 * Translation.Z.1)))
glimpse(users)
View(users)
users <- mutate(users, AAA = sqrt((Translation.X.1 * Translation.X.1) + (Translation.Y.1 * Translation.Y.1) + (Translation.Z.1 * Translation.Z.1)))
users <- transmute(users, Translation.X.1 = sqrt((Translation.X.1 * Translation.X.1) + (Translation.Y.1 * Translation.Y.1) + (Translation.Z.1 * Translation.Z.1)))
View(users)
users <- select(task,ends_with(".1"),ends_with(".2"), ends_with(".3"),ends_with(".4"), -starts_with("User"),-starts_with("Con"))
View(users)
tidyusers <- mutate(users, U1Trans = sqrt((Translation.X.1 * Translation.X.1) + (Translation.Y.1 * Translation.Y.1) + (Translation.Z.1 * Translation.Z.1)))
View(tidyusers)
tidyusers <- transmute(users, U1Trans = sqrt((Translation.X.1 * Translation.X.1) + (Translation.Y.1 * Translation.Y.1) + (Translation.Z.1 * Translation.Z.1)))
tidyusers$U2Trans <- transmute(users, U2Trans = sqrt((Translation.X.2 * Translation.X.2) + (Translation.Y.2 * Translation.Y.2) + (Translation.Z.2 * Translation.Z.2)))
tidyusers$U2Trans <- transmute(users, sqrt((Translation.X.2 * Translation.X.2) + (Translation.Y.2 * Translation.Y.2) + (Translation.Z.2 * Translation.Z.2)))
tidyusers$U3Trans <- transmute(users, sqrt((Translation.X.3 * Translation.X.3) + (Translation.Y.3 * Translation.Y.3) + (Translation.Z.3 * Translation.Z.3)))
tidyusers <- transmute(users, U2Trans = sqrt((Translation.X.2 * Translation.X.2) + (Translation.Y.2 * Translation.Y.2) + (Translation.Z.2 * Translation.Z.2)))
tidyusers$U1Trans <- transmute(users, U1Trans = sqrt((Translation.X.1 * Translation.X.1) + (Translation.Y.1 * Translation.Y.1) + (Translation.Z.1 * Translation.Z.1)))
tidyusers$U1Trans <- mutate(users, U1Trans = sqrt((Translation.X.1 * Translation.X.1) + (Translation.Y.1 * Translation.Y.1) + (Translation.Z.1 * Translation.Z.1)))
View(tidyusers)
U1Trans <- transmute(users, U1Trans = sqrt((Translation.X.1 * Translation.X.1) + (Translation.Y.1 * Translation.Y.1) + (Translation.Z.1 * Translation.Z.1)))
tidyusers$U1Trans <- U1Trans
View(tidyusers)
tidyusers$U1Trans <- U1Trans
rm(tidyusers)
View(U1Trans)
tidyusers$U1Trans <- U1Trans
tidyusers <- U1Trans
View(tidyusers)
tidyusers$U2 <- U1Trans
View(tidyusers)
tidyusers$U2 <- U1Trans[]
View(tidyusers)
U2Trans <- transmute(users, U2Trans = sqrt((Translation.X.2 * Translation.X.2) + (Translation.Y.2 * Translation.Y.2) + (Translation.Z.2 * Translation.Z.2)))
View(U2Trans)
View(U1Trans)
df <- data.frame(U1Trans,U2Trans)
View(df)
rm(df,tidyusers)
U3Trans <- transmute(users, U3Trans = sqrt((Translation.X.3 * Translation.X.3) + (Translation.Y.3 * Translation.Y.3) + (Translation.Z.3 * Translation.Z.3)))
U4Trans <- transmute(users, U4Trans = sqrt((Translation.X.4 * Translation.X.4) + (Translation.Y.4 * Translation.Y.4) + (Translation.Z.4 * Translation.Z.4)))
rad2deg <- function(rad) {(rad * 180) / (pi)}
U1Rot <- transmute(users, U1Rot = rad2deg(2*cos(Rotation.W.1)))
View(U1Rot)
rad2deg(2*cos(Rotation.W.1)
)
rad2deg(2*cos(Rotation.W.1))
rad2deg(2*cos(users$Rotation.W.1))
2*cos(users$Rotation.W.1)
View(rad2deg)
pi
View(users)
View(users)
U1Rot <- transmute(users, U1Rot = rad2deg(2*acos(Rotation.W.1)))
View(U1Rot)
U2Rot <- transmute(users, U2Rot = rad2deg(2*acos(Rotation.W.2)))
U3Rot <- transmute(users, U3Rot = rad2deg(2*acos(Rotation.W.3)))
U4Rot <- transmute(users, U4Rot = rad2deg(2*acos(Rotation.W.4)))
U4Rot <- transmute(users, U4Rot = rad2deg(2*acos(Rotation.W.5)))
View(users)
U1Scale <- transmute(users, U1Scale = abs(Scalling.1-1))
View(U1Scale)
View(users)
View(U1Scale)
U2Scale <- transmute(users, U2Scale = abs(Scalling.2-1))
U3Scale <- transmute(users, U3Scale = abs(Scalling.3-1))
U4Scale <- transmute(users, U4Scale = abs(Scalling.4-1))
View(users)
U1RotCam <- transmute(users, U1RotCam = rad2deg(2*acos(Camera.W.1)))
U2RotCam <- transmute(users, U2RotCam = rad2deg(2*acos(Camera.W.2)))
U3RotCam <- transmute(users, U3RotCam = rad2deg(2*acos(Camera.W.3)))
U4RotCam <- transmute(users, U4RotCam = rad2deg(2*acos(Camera.W.4)))
tidyUsers <- data.frame(U1Trans,U1Rot,U1Scale,U1RotCam,U2Trans,U2Rot,U2Scale,U2RotCam,U3Trans,U3Rot,U3Scale,U3RotCam,U4Trans,U4Rot,U4Scale,U4RotCam,)
tidyUsers <- data.frame(U1Trans,U1Rot,U1Scale,U1RotCam,U2Trans,U2Rot,U2Scale,U2RotCam,U3Trans,U3Rot,U3Scale,U3RotCam,U4Trans,U4Rot,U4Scale,U4RotCam)
View(tidyUsers)
users[users>0.999999] <- 1
View(users)
View(users)
U1Rot <- transmute(users, U1Rot = rad2deg(2*acos(Rotation.W.1)))
U2Rot <- transmute(users, U2Rot = rad2deg(2*acos(Rotation.W.2)))
U3Rot <- transmute(users, U3Rot = rad2deg(2*acos(Rotation.W.3)))
U4Rot <- transmute(users, U4Rot = rad2deg(2*acos(Rotation.W.4)))
View(U3Rot)
View(U2Scale)
View(U2RotCam)
View(U2Rot)
U1RotCam <- transmute(users, U1Rot = rad2deg(2*acos(Rotation.W.1)))
U2RotCam <- transmute(users, U2Rot = rad2deg(2*acos(Rotation.W.2)))
U3RotCam <- transmute(users, U3Rot = rad2deg(2*acos(Rotation.W.3)))
U4RotCam <- transmute(users, U4Rot = rad2deg(2*acos(Rotation.W.4)))
tidyUsers <- data.frame(U1Trans,U1Rot,U1Scale,U1RotCam,U2Trans,U2Rot,U2Scale,U2RotCam,U3Trans,U3Rot,U3Scale,U3RotCam,U4Trans,U4Rot,U4Scale,U4RotCam)
View(tidyUsers)
colSums(tidyUsers != 0)
write.csv(tidyUsers)
View(tidyUsers)
tidyUsers[-c(3253)]
View(tidyUsers)
View(U1Rot)
View(users)
View(data1)
tidyUsers <- tidyUsers[-c(3253)]
View(tidyUsers)
tidyUsers <- tidyUsers[-c(3253),]
View(tidyUsers)
colSums(tidyUsers != 0)
View(tidyUsers)
nrow(tidyUsers)
colSums(tidyUsers != 0) / nrow(tidyUsers)
View(tidyUsers)
loadTrans <- transmute(tidyUsers, loadTrans = U1Trans + U2Trans + U3Trans + U4Trans)
View(loadTrans)
rm(loadTrans)
transmute(tidyUsers, loadTrans = U1Trans + U2Trans + U3Trans + U4Trans) %>% colSums(. != 0) / nrow(.)
transmute(tidyUsers, loadTrans = U1Trans + U2Trans + U3Trans + U4Trans) %>% colSums( != 0) / nrow()
ttt <- transmute(tidyUsers, loadTrans = U1Trans + U2Trans + U3Trans + U4Trans)
colSums(ttt != 0) / nrow(ttt)
ttt <- transmute(tidyUsers, loadTrans = U1Rot + U2Rot + U3Rot + U4Rot)
colSums(ttt != 0) / nrow(ttt)
ttt <- transmute(tidyUsers, loadTrans = U1Scale + U2Scale + U3Scale + U4Scale)
colSums(ttt != 0) / nrow(ttt)
ttt <- transmute(tidyUsers, loadTrans = U1RotCam + U2RotCam + U3RotCam + U4RotCam)
ttt <- transmute(tidyUsers, loadTrans = U1RotCam + U2RotCam + U3RotCam + U4RotCam)
ttt <- transmute(tidyUsers, loadrpt = U1RotCam + U2RotCam + U3RotCam + U4RotCam)
View(tidyUsers)
ttt <- transmute(tidyUsers, loadrpt = U1Rot.1 + U2Rot.1 + U3Rot.1 + U4Rot.1)
colSums(ttt != 0) / nrow(ttt)
loadTrans <- transmute(tidyUsers, loadTrans = U1Trans + U2Trans + U3Trans + U4Trans)
loadScale <- transmute(tidyUsers, loadScale = U1Scale + U2Scale + U3Scale + U4Scale)
View(U1Rot)
View(loadScale)
loadRot <- transmute(tidyUsers, loadRot = U1Rot + U2Rot + U3Rot + U4Rot)
loadCam <- transmute(tidyUsers, loadCam = U1Rot.1 + U2Rot.1 + U3Rot.1 + U4Rot.1)
loadTotal <- loadTrans + loadRot + loadScale + loadCam
View(loadTotal)
colSums(loadTotal != 0)
colSums(loadTotal != 0) / nrow(loadTotal)
View(loadTotal)
timeWorked <- colSums(loadTotal != 0)
colSums(tidyUsers != 0) / timeWorked
colSums(tidyUsers != 0) / nrow(tidyUsers)
save.image("~/Documents/DataAnalysis3DController/Analysis/R/RWorkSpace.RData")
